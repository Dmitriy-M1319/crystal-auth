version: "3.9"

services:
#  keycloak-postgres:
#    image: library/postgres:${KC_POSTGRES_IMAGE_TAG:-14}
#    container_name: ${POSTGRES_CONTAINER_NAME:-postgres}
#    restart: on-failure
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: postgres
#    healthcheck:
#      test: pg_isready -d postgres
#      interval: 10s
#      timeout: 5s
#      retries: 3
#      start_period: 5s
#    ports:
#      - ${KC_POSTGRES_PORT_MAPPING:-5435}:5432
#    deploy:
#      resources:
#        limits:
#          memory: 256M
#
#  keycloak:
#    image: quay.io/keycloak/keycloak:20.0.2
#    container_name: keycloak
#    command:
#      - start --auto-build --db postgres --hostname-strict-https false --hostname-strict false --proxy edge --http-enabled true --import-realm --spi-user-profile-legacy-user-profile-read-only-attributes *_RES_ACCESS_MODE
#    environment:
#      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/postgres
#      KC_DB_USERNAME: postgres
#      KC_DB_PASSWORD: postgres
#      KC_DB_SCHEMA: public
#      KC_FEATURES: preview
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    ports:
#      - 8282:8080
#    depends_on:
#      keycloak-postgres:
#        condition: service_healthy
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master"]
#      start_period: 10s
#      interval: 30s
#      retries: 3
#      timeout: 5s

  service:
    build: .
    container_name: auth_service
    ports:
      - "8000:8000"
      - "8030:8030"
      - "12201:12201"
    volumes:
      - ./config.yaml:/code/config.yaml
    networks:
      - postgres
    depends_on:
      - postgresql

  postgresql:
    image: postgres
    container_name: auth_postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - postgres

  pgadmin:
    image: dpage/pgadmin4
    container_name: auth_pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - postgres

  swagger-ui:
    image: docker.swagger.io/swaggerapi/swagger-ui
    container_name: auth_swagger
    ports:
      - "8090:8080"
    environment:
      SWAGGER_JSON: /auth/swagger.json
    volumes:
      - ./swagger/crystal-auth/v1/auth.swagger.json:/auth/swagger.json

  redis:
    image: redis:latest
    container_name: auth_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/root/redis
    environment:
      - REDIS_PASSWORD=redis-password
      - REDIS_PORT=6379

volumes:
  pgdata:
  pgadmin-data:
  redis-data:

networks:
  postgres:
    driver: bridge